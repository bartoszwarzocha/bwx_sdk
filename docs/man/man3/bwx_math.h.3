.TH "E:/C++/Projekty/Libs/bwx_sdk/src/bwx_core/bwx_math.h" 3 "Version 1.0.0" "BWX SDK" \" -*- nroff -*-
.ad l
.nh
.SH NAME
E:/C++/Projekty/Libs/bwx_sdk/src/bwx_core/bwx_math.h
.SH SYNOPSIS
.br
.PP
\fR#include <math\&.h>\fP
.br
\fR#include 'bwx_sdk/bwx_globals\&.h'\fP
.br

.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBbwx_sdk\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBbwxPI\fP   M_PI"
.br
.ti -1c
.RI "#define \fBbwxHPI\fP   \fBbwxPI\fP / 2\&.0f"
.br
.ti -1c
.RI "#define \fBbwxQPI\fP   \fBbwxPI\fP / 4\&.0f"
.br
.ti -1c
.RI "#define \fBbwxDPI\fP   \fBbwxPI\fP * 2\&.0f"
.br
.ti -1c
.RI "#define \fBbwxSPI\fP   std::powf((float)\fBbwxPI\fP, 2\&.0f)"
.br
.ti -1c
.RI "#define \fBbwxCPI\fP   std::powf((float)\fBbwxPI\fP, 3\&.0f)"
.br
.ti -1c
.RI "#define \fBbwxSQRT2\fP   std::sqrtf(2\&.0f)"
.br
.ti -1c
.RI "#define \fBbwxEpsilon\fP   1e\-6f"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "float \fBbwx_sdk::bwxToRadians\fP (float dgrs)"
.br
.RI "Converts an angle from degrees to radians\&. "
.ti -1c
.RI "float \fBbwx_sdk::bwxToDegrees\fP (float rads)"
.br
.RI "Converts an angle from radians to degrees\&. "
.ti -1c
.RI "bool \fBbwx_sdk::bwxIsPower2\fP (int x)"
.br
.RI "Checks if an integer is a power of 2\&. "
.ti -1c
.RI "int \fBbwx_sdk::bwxNextPower2\fP (int x)"
.br
.RI "Returns the next power of 2 greater than or equal to the given number\&. "
.ti -1c
.RI "int \fBbwx_sdk::bwxRand\fP (int min, int max)"
.br
.RI "Generates a random integer within the inclusive range [min, max]\&. "
.ti -1c
.RI "double \fBbwx_sdk::bwxRand\fP (double min, double max)"
.br
.RI "Generates a random double within the inclusive range [min, max]\&. "
.ti -1c
.RI "int \fBbwx_sdk::bwxNextMultiple\fP (int m, int value)"
.br
.RI "Returns the smallest multiple of m that is greater than or equal to value\&. "
.ti -1c
.RI "double \fBbwx_sdk::bwxNextMultiple\fP (double m, double value)"
.br
.RI "Returns the smallest multiple of m that is greater than or equal to value\&. "
.ti -1c
.RI "float \fBbwx_sdk::bwxIntermediate\fP (float a, float b, float x)"
.br
.RI "Returns a normalized value in the range [0, 1] based on x within the interval [a, b]\&. "
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define bwxCPI   std::powf((float)\fBbwxPI\fP, 3\&.0f)"

.SS "#define bwxDPI   \fBbwxPI\fP * 2\&.0f"

.SS "#define bwxEpsilon   1e\-6f"

.SS "#define bwxHPI   \fBbwxPI\fP / 2\&.0f"

.SS "#define bwxPI   M_PI"

.PP
Referenced by \fBbwx_sdk::bwxToDegrees()\fP, and \fBbwx_sdk::bwxToRadians()\fP\&.
.SS "#define bwxQPI   \fBbwxPI\fP / 4\&.0f"

.SS "#define bwxSPI   std::powf((float)\fBbwxPI\fP, 2\&.0f)"

.SS "#define bwxSQRT2   std::sqrtf(2\&.0f)"

.SH "Author"
.PP 
Generated automatically by Doxygen for BWX SDK from the source code\&.
